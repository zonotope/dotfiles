;; -*-lisp-*-

(in-package :stumpwm)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; default apps                                                             ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setq *terminal* "kitty")
(setq *browser* "chromium")
(setq *editor* "emacsclient --create-frame")
(setq *inline-editor* "~/.emacs_anywhere/bin/run")
(setq *screen-locker* "xset s activate")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; appearance                                                               ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; colors (Tomorrow Night Eighties)
(defconstant red "#f2777a")
(defconstant yellow "#ffcc66")
(defconstant green "#99cc99")
(defconstant aqua "#66cccc")
(defconstant blue "#6699cc")
(defconstant purple "#cc99cc")

(defconstant white "#cccccc")
(defconstant light-gray "#999999")
(defconstant gray "#515151")
(defconstant dark-gray "#393939")
(defconstant black "#2d2d2d")

(setf *colors* (list black red green yellow blue purple aqua white gray
                     dark-gray))
(update-color-map (current-screen))

(set-focus-color            blue)
(set-unfocus-color          dark-gray)
(set-float-focus-color      gray)
(set-float-unfocus-color    dark-gray)
(set-win-bg-color           black)
(set-fg-color               white)
(set-bg-color               black)
(set-border-color           blue)
(setf *hidden-window-color* yellow)

;; font
(set-font "-*-dejavu sans mono-*-r-*-*-*-120-*-*-*-*-*-*")

;; windows
(setf *window-border-style* :thin) ; :none, :thick, :thin, :tight
(setq *message-window-padding* 5)

;;;; dmenu
(setq *dmenu-theme* (concatenate 'string
                                 "-fn \"Inconsolata-25\" "
                                 "-nb \"" dark-gray "\" "
                                 "-nf \"" light-gray "\" "
                                 "-sf \"" blue "\" "
                                 "-sb \"" dark-gray "\""))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; behavior                                                                 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(setf *window-format* "[%m%s%n: %c--%15t]")
(setf *min-frame-height* 20)

;; window positioning
(setf *message-window-gravity* :center) ; :top-left :top-right :bottom-left
                                        ; :bottom-right :center

(setf *input-window-gravity* :center)   ; :top-left :top-right :bottom-left
                                        ; :bottom-right :center

;; mode line
(setf *mode-line-position* :top)
(setf *screen-mode-line-format* "%v")

;; set the mouse policy to focus follows mouse;
(setf *mouse-focus-policy* :sloppy) ; :click, :ignore, :sloppy

;; how long messages appear in seconds
(setf *timeout-wait* 5)

;; alert text in newly focused frames
(setf *frame-indicator-text* " here! ")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; bindings                                                                 ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(set-prefix-key (kbd "C-t"))

(defun exec-string (command)
  (concatenate 'string "exec " command))

;; b is for browser!
(define-key *root-map* (kbd "b") (exec-string *browser*))

;; c is for console!
(define-key *root-map* (kbd "c") (exec-string *terminal*))

;; bind emacsclient instead of standalone emacs to e
(define-key *root-map* (kbd "e") (exec-string *editor*))

;; E to edit in emacs
(define-key *root-map* (kbd "E") (exec-string *inline-editor*))

;; l is for lock screen
(define-key *root-map* (kbd "l") (exec-string *screen-locker*))

;; dmenu is a better launcher than the built in
(define-key *root-map* (kbd "RET") (concatenate 'string
                                                "exec dmenu_run "
                                                "-p \">>\" "
                                                *dmenu-theme*))

;; = to bring up clipboard manager
(define-key *root-map* (kbd "=") (concatenate 'string
                                              "exec clipmenu "
                                              *dmenu-theme*))

;; w is a better key for the window list
(define-key *root-map* (kbd "w") "windowlist")

;; F for fullscreen
(define-key *root-map* (kbd "F") "fullscreen")

;; C-- to toggle the mode line
(define-key *root-map* (kbd "C--") "mode-line")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; desktop                                                                  ;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; set frame layout
(clear-window-placement-rules)
(restore-from-file "~/.stumpwm.d/basic.desk")
(define-frame-preference "main"
  (1 nil nil :class "Conky" :role nil))

;; load .Xresources
(run-shell-command "xrdb -merge ~/.Xresources")

;; set the mouse cursor
(run-shell-command "xsetroot -cursor_name left_ptr")

;; set the wallpaper
;; (run-shell-command "feh --bg-scale pics/wallpapers/john_b_gordon_classroom.jpg")

;; start the volume/brightness notification daemon
(run-shell-command "volnoti -t 2 -a 0.25")

;; bind multimedia and screen brightness keys
(run-shell-command "xbindkeys")

;; start the light-locker lock screen daemon
(run-shell-command "light-locker --lock-on-suspend")

;; lock the screen with light-locker when idle
(run-shell-command (concatenate 'string
                                "xss-lock --transfer-sleep-lock"
                                " -- "
                                "light-locker-command --lock"))

;; ;; start the top status bar
(run-shell-command "killall polybar")
(run-shell-command "polybar primary")

;; start the bottom status bar
(run-shell-command "conky")

;; start the network manager gui applet
(run-shell-command "nm-applet")

;; start the emacs daemon
(run-shell-command "emacs --daemon")

;; start the clipboard manager
(run-shell-command "clipmenud")
